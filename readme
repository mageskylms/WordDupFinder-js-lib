# Biblioteca de Contagem de Palavras

## Criado na realização do curso da Alura:  JavaScript com Node.js: criando sua primeira biblioteca https://[Link para certificado de conclusão](https://cursos.alura.com.br/user/mageskylms/course/javascript-node-js-criando-primeira-biblioteca/certificate)

## Descrição
Esta biblioteca Node.js processa arquivos de texto, identifica palavras duplicadas em cada parágrafo e gera um arquivo com os resultados encontrados.


## Funcionalidades
- **Contagem de palavras duplicadas:** Analisa parágrafos de um arquivo de texto e identifica palavras repetidas.
- **Geração de arquivo de resultados:** Cria um arquivo `resultado.txt` com as palavras duplicadas encontradas.
- **Tratamento de erros:** Captura erros comuns, como arquivos inexistentes.

## Requisitos
- **Node.js**: Certifique-se de ter o Node.js instalado em sua máquina.
- **Pacotes Necessários**: Certifique-se de baixar os diretórios node_modules e package.json para garantir o funcionamento correto do projeto.

## Instalação
1. Clone este repositório:
   ```bash
   git clone https://github.com/mageskylms/nome-do-repositorio.git
   ```

2. Navegue até o diretório do projeto:
   ```bash
   cd nome-do-repositorio
   ```

3. Instale as dependências:
   ```bash
   npm install
   ```

Certifique-se de que os pacotes commander e chalk estão instalados. Para instalá-los manualmente, use:

npm install commander chalk

commander: Facilita o uso de argumentos na linha de comando.

chalk: Permite colorir e formatar mensagens no terminal.

## Como Usar
Execute o script pela linha de comando utilizando os seguintes parâmetros obrigatórios:
- **--texto** ou **-t**: Caminho do arquivo de texto a ser processado.
- **--destino** ou **-d**: Caminho da pasta onde o arquivo de resultados será salvo.

### Exemplo de Uso
```bash
node cli.js --texto ./arquivos/texto-web.txt --destino ./resultados
```

### Explicação dos Parâmetros
- **--texto (-t)**: Caminho do arquivo de texto a ser processado (exemplo: `./arquivos/texto-web.txt`).
- **--destino (-d)**: Diretório onde o arquivo `resultado.txt` será salvo (exemplo: `./resultados`).

### Saída Esperada
Se o processamento for bem-sucedido, você verá a mensagem:
```
texto processado com sucesso
```
E o arquivo `resultado.txt` será criado no diretório especificado, contendo as palavras duplicadas encontradas em cada parágrafo.

![Tela de execução do projeto](./arquivos/captura_terminal.png)

![Tela de resultado do processamento](./arquivos/captura_resultado.png)

## Estrutura do Projeto
- **src/cli.js**: Ponto de entrada da aplicação. Responsável por receber os argumentos da linha de comando e iniciar o processamento.
- **src/index.js**: Contém a lógica principal para contagem de palavras.
- **src/helpers.js**: Funções auxiliares para filtrar ocorrências e montar a saída do arquivo.
- **erros/funcoesErro.js**: Funções para tratamento de erros.
- **resultados**:para receber o arquivo final.
-**package.json**

## Dependências
- **commander**: Manipulação de argumentos da linha de comando.
- **chalk**: Exibição colorida de mensagens no terminal.

## Contribuição
Contribuições são bem-vindas! Sinta-se à vontade para abrir issues e pull requests.

## Licença
Este projeto está licenciado sob a [MIT License](./LICENSE).

---------------------------------------------------------------------------------------------------------------

# Word Count Library

## Description
This Node.js library processes text files, identifies duplicate words in each paragraph, and generates a file with the found results.

## Features
- **Duplicate Word Count:** Analyzes paragraphs of a text file to identify repeated words.
- **Result File Generation:** Creates a `result.txt` file containing the duplicate words found.
- **Error Handling:** Captures common errors, such as missing files.

## Requirements
- **Node.js:** Ensure you have Node.js installed on your machine.
- **Necessary Packages:** Make sure to download the `node_modules` and `package.json` directories to guarantee proper project functionality.

## Installation
1. Clone this repository:
   ```bash
   git clone https://github.com/your-username/repository-name.git
   ```

2. Navigate to the project directory:
   ```bash
   cd repository-name
   ```

3. Install the dependencies:
   ```bash
   npm install
   ```

4. Ensure that **commander** and **chalk** packages are installed. To install them manually, use:
   ```bash
   npm install commander chalk
   ```
   - **commander:** Facilitates command-line argument handling.
   - **chalk:** Enables colored and formatted terminal messages.

## Usage
Run the script from the command line using the following required parameters:
- **--text** or **-t:** Path to the text file to be processed.
- **--destination** or **-d:** Path to the folder where the results file will be saved.

### Usage Example
```bash
node cli.js --text ./files/web-text.txt --destination ./results
```

### Parameter Explanation
- **--text (-t):** Path to the text file to process (e.g., `./files/web-text.txt`).
- **--destination (-d):** Directory where the `result.txt` file will be saved (e.g., `./results`).

### Expected Output
If the processing is successful, you will see the message:
```
text processed successfully
```
And the `result.txt` file will be created in the specified directory, containing the duplicate words found in each paragraph.

![Tela de execução do projeto](./arquivos/captura_terminal.png)

![Tela de resultado do processamento](./arquivos/captura_resultado.png)

## Project Structure
- **src/index.js**: Application entry point. Handles command-line arguments and starts the processing.
- **src/index.js:** Contains the main logic for word counting.
- **src/helpers.js:** Helper functions to filter occurrences and build the output file.
- **errors/functionsError.js:** Functions for error handling.
- **resultados:** to de final file.
- **package.json**


## Dependencies
- **commander:** Command-line argument handling.
- **chalk:** Displays colored messages in the terminal.

## Contribution
Contributions are welcome! Feel free to open issues and pull requests.

## License
This project is licensed under the [MIT License](./LICENSE).



